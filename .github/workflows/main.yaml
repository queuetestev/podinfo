# This is a basic workflow to help you get started with Actions

name: CI-CD

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
  merge_group:

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
# jobs:
#   # This workflow contains a single job called "build"
#   build:
#     # The type of runner that the job will run on
#     runs-on: ubuntu-latest

#     # Steps represent a sequence of tasks that will be executed as part of the job
#     steps:

#       - uses: actions/checkout@v3

#       - uses: ./.github/actions/helm-deployer
#         with:
#           repository: flux-test
#           cluster: cluster01
#           namespace: namespacedemo
#           file: helm-release.yaml
#           token: ${{ secrets.FLUX_REPO_TOKEN }}
jobs:

  ci:
    runs-on: ubuntu-latest
    steps:

    - name: 'Checkout Source Code'
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - uses: cschleiden/replace-tokens@v1
      with:
        files: '["internal/*.yaml"]'
      env:
        version: 3 #for us this would be output release from version job
        prcommit: ${{ github.event_name == 'pull_request' && github.event.pull_request.head.sha || github.sha }}

    - uses: ./.github/actions/helm-composer

    - name: 'Skip flux notification check status'
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v6
      with:
        retries: 3
        script: |

          for await (const pull_requests of github.paginate.iterator(
            github.rest.issues.listForRepo,
            {
              owner: context.repo.owner,
              repo: context.repo.repo,
              state: 'closed',
              base: context.payload.pull_request.base.ref
            },
          )) {


            for (const pr of pull_requests.data){

              if (pr.merged_at){
                console.log('hola')
              }
            }
            
            console.log(pull_requests)
          }

  cd:

    if: github.event_name != 'pull_request'

    needs: ci

    permissions:
      issues: read
      checks: write
      packages: write
      actions: read
      contents: write  # for actions/checkout to fetch code
      pull-requests: write

    uses: ./.github/workflows/helm-deployer.yaml

    with:
      repository: fleet-infra
      cluster: ${{ github.event_name == 'merge_group' && 'my-cluster' || 'main-cluster' }}
      namespace: namespace01
      artifact_name: ${{ github.event_name == 'merge_group' && 'internal-gitops' || 'rendered-helmreleases' }}

    secrets:
      token: ${{ secrets.FLUX_REPO_TOKEN }}
